version: 2.1

orbs:
  gradle: smartnews/gradle@3
  terraform: smartnews/terraform@1
  kubernetes: smartnews/kubernetes@3

orb_dockers:
#  gradle: &orb_docker_gradle 165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/circleci-orbs/gradle:3
  gradle: &orb_docker_gradle 165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/circleci-orbs/gradle:8.0-3
  terraform: &orb_docker_terraform 165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/circleci-orbs/terraform:1
  kubernetes: &orb_docker_kubernetes 165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/circleci-orbs/kubernetes:3

executors:
  maven:
    docker:
      - image: *orb_docker_gradle

workflow_filters:
  branch-filter: &branch-filter
    filters:
      branches:
        ignore:
          - master
          - dev
  master-filter: &master-filter
    filters:
      branches:
        only: master
  dev-filter: &dev-filter
    filters:
      branches:
        only: dev

commands:
  skaffold-build:
    parameters:
      env:
        type: string
      region:
        type: string
      cluster:
        type: string
      component:
        type: string
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Run Skaffold
          command: |
            export TAG=<< parameters.env >>-$(echo $CIRCLE_SHA1 | cut -c -7)
            echo $TAG
            export PIPELINE_OIDC_TOKEN_VAR=CIRCLE_OIDC_TOKEN
            export PIPELINE_SK_CHECK_CONFIG_FILES=true
            export PIPELINE_SK_USE_CLUSTER_PROFILE=true
            spaas skaffold build --aws-account << parameters.env >> --region << parameters.region >> --cluster << parameters.cluster >> --system realtime-streaming --component << parameters.component >> --target '' --path ''

  skaffold-run:
    parameters:
      env:
        type: string
      region:
        type: string
      cluster:
        type: string
      component:
        type: string
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Run Skaffold
          command: |
            export env=<< parameters.env >>
            export TAG=<< parameters.env >>-$(echo $CIRCLE_SHA1 | cut -c -7)
            echo "TAG=$TAG"
            export PIPELINE_OIDC_TOKEN_VAR=CIRCLE_OIDC_TOKEN
            export PIPELINE_SK_CHECK_CONFIG_FILES=true
            export PIPELINE_SK_USE_CLUSTER_PROFILE=true
            spaas skaffold build --aws-account << parameters.env >> --env '' --region << parameters.region >> --cluster << parameters.cluster >> --namespace '' --system realtime-streaming --component '' --target << parameters.component >>
            spaas skaffold run --aws-account << parameters.env >> --env '' --region << parameters.region >> --cluster << parameters.cluster >> --namespace '' --system realtime-streaming --component '' --target << parameters.component >>

jobs:
  deploy:
    executor: maven
    parameters:
      env:
        type: string
      region:
        type: string
      cluster:
        type: string
      component:
        type: string
      build-only:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.build-only >>
          steps:
            - skaffold-build:
                env: << parameters.env >>
                region: << parameters.region >>
                cluster: << parameters.cluster >>
                component: << parameters.component >>
      - unless:
          condition: << parameters.build-only >>
          steps:
            - skaffold-run:
                env: << parameters.env >>
                region: << parameters.region >>
                cluster: << parameters.cluster >>
                component: << parameters.component >>

workflows:
  deliver-dev:
    jobs:
      - approve:
          <<: *dev-filter
          name: approve/postgres
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/postgres
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: postgres
          skaffold_use_cluster_profile: true
          requires:
            - approve/postgres
      - approve:
          <<: *dev-filter
          name: approve/clickhouse
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/clickhouse
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: clickhouse
          skaffold_use_cluster_profile: true
          requires:
            - approve/clickhouse
      - approve:
          <<: *dev-filter
          name: approve/supertokens
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/supertokens
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: supertokens
          skaffold_use_cluster_profile: true
          requires:
            - approve/supertokens
      - approve:
          <<: *dev-filter
          name: approve/redis
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/redis
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: redis
#          resourceClass: large
          skaffold_use_cluster_profile: true
          requires:
            - approve/redis
      - approve:
          <<: *dev-filter
          name: approve/local-kms
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/local-kms
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: local-kms
          skaffold_use_cluster_profile: true
          requires:
            - approve/local-kms
      - approve:
          <<: *dev-filter
          name: approve/server
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/server
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: server
          skaffold_use_cluster_profile: true
          requires:
            - approve/server
      - approve:
          <<: *dev-filter
          name: approve/console
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/console
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: console
          skaffold_use_cluster_profile: true
          requires:
            - approve/console
      - approve:
          <<: *dev-filter
          name: approve/proxy
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/proxy
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: proxy
          skaffold_use_cluster_profile: true
          requires:
            - approve/proxy
      - approve:
          <<: *dev-filter
          name: approve/prisma-migrate
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/prisma-migrate
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: prisma-migrate
          skaffold_use_cluster_profile: true
          requires:
            - approve/prisma-migrate
      - approve:
          <<: *dev-filter
          name: approve/clickhouse-migrate
          type: approval
      - gradle/deliver:
          <<: *dev-filter
          name: deliver/dev/clickhouse-migrate
          docker: *orb_docker_gradle
          aws_account: dev
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: clickhouse-migrate
          skaffold_use_cluster_profile: true
          requires:
            - approve/clickhouse-migrate

  deliver-prd:
    jobs:
      - approve:
          <<: *master-filter
          name: approve/postgres
          type: approval
      - deploy:
          <<: *master-filter
          name: deliver/prd/postgres
          env: prd
          region: tokyo
          cluster: common-0
          component: postgres
          requires:
            - approve/postgres
      - approve:
          <<: *master-filter
          name: approve/clickhouse
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/clickhouse
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: clickhouse
          skaffold_use_cluster_profile: true
          requires:
            - approve/clickhouse
      - approve:
          <<: *master-filter
          name: approve/supertokens
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/supertokens
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: supertokens
          skaffold_use_cluster_profile: true
          requires:
            - approve/supertokens
      - approve:
          <<: *master-filter
          name: approve/redis
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/redis
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: redis
          #          resourceClass: large
          skaffold_use_cluster_profile: true
          requires:
            - approve/redis
      - approve:
          <<: *master-filter
          name: approve/local-kms
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/local-kms
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: local-kms
          skaffold_use_cluster_profile: true
          requires:
            - approve/local-kms
      - approve:
          <<: *master-filter
          name: approve/server
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/server
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: server
          skaffold_use_cluster_profile: true
          requires:
            - approve/server
      - approve:
          <<: *master-filter
          name: approve/console
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/console
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: console
          skaffold_use_cluster_profile: true
          requires:
            - approve/console
      - approve:
          <<: *master-filter
          name: approve/proxy
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/proxy
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: proxy
          skaffold_use_cluster_profile: true
          requires:
            - approve/proxy
      - approve:
          <<: *master-filter
          name: approve/prisma-migrate
          type: approval
      - gradle/deliver:
          <<: *master-filter
          name: deliver/prd/prisma-migrate
          docker: *orb_docker_gradle
          aws_account: prd
          env: ""
          region: tokyo
          cluster: common-0
          system: realtime-streaming
          target: prisma-migrate
          skaffold_use_cluster_profile: true
          requires:
            - approve/prisma-migrate

  main:
    when: << pipeline.parameters.workflow_main >>
    jobs:
      - terraform/trigger:
          docker: *orb_docker_terraform
          name: terraform/trigger
          system: realtime-streaming
          path: .
  terraform:
    when: << pipeline.parameters.workflow_terraform >>
    jobs:
      - terraform/plan:
          docker: *orb_docker_terraform
          name: << pipeline.parameters.env >>/<< pipeline.parameters.region >>/<< pipeline.parameters.system >>/plan
          env: << pipeline.parameters.env >>
          region: << pipeline.parameters.region >>
          system: << pipeline.parameters.system >>
          path: << pipeline.parameters.path >>
      - approve:
          <<: *master-filter
          name: << pipeline.parameters.env >>/<< pipeline.parameters.region >>/<< pipeline.parameters.system >>/approve
          type: approval
          requires:
            - << pipeline.parameters.env >>/<< pipeline.parameters.region >>/<< pipeline.parameters.system >>/plan
      - terraform/apply:
          <<: *master-filter
          docker: *orb_docker_terraform
          name: << pipeline.parameters.env >>/<< pipeline.parameters.region >>/<< pipeline.parameters.system >>/apply
          env: << pipeline.parameters.env >>
          region: << pipeline.parameters.region >>
          system: << pipeline.parameters.system >>
          path: << pipeline.parameters.path >>
          requires:
            - << pipeline.parameters.env >>/<< pipeline.parameters.region >>/<< pipeline.parameters.system >>/approve

parameters:
  workflow_main:
    type: boolean
    default: true
  workflow_terraform:
    type: boolean
    default: false
  env:
    type: string
    default: ""
  region:
    type: string
    default: ""
  system:
    type: string
    default: ""
  path:
    type: string
    default: ""
