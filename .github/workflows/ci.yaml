name: Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/release.yaml"
  push:
    branches:
      - "main"
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/release.yaml"

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: cache-node-modules-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 18.x

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check Formatting
        run: npx nx format:check --all --verbose

      - name: Lint
        run: npx nx run-many --target=lint --all --parallel --maxParallel=3

      - name: Test
        run: npx nx run-many --target=test --all --parallel --maxParallel=3

      - name: Build
        run: npx nx run-many --target=build --all --parallel --maxParallel=3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dockerize
        run: npx nx run-many --target=docker:build --configuration=ci --all --parallel --maxParallel=3
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_TAGS: "type=raw,value=${{ github.run_id }},prefix=gh-\ntype=ref,event=branch,prefix=branch-\ntype=sha,format=short"
